<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="15" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="automation test" duration-ms="164" started-at="2017-05-27T06:28:25Z" finished-at="2017-05-27T06:28:25Z">
    <groups>
      <group name="a">
        <method signature="groups.test1()[pri:0, instance:testngFiles.groups@62ee68d8]" name="test1" class="testngFiles.groups"/>
        <method signature="groups.test3()[pri:0, instance:testngFiles.groups@62ee68d8]" name="test3" class="testngFiles.groups"/>
      </group> <!-- a -->
      <group name="b">
        <method signature="groups.test2()[pri:0, instance:testngFiles.groups@62ee68d8]" name="test2" class="testngFiles.groups"/>
        <method signature="groups.test4()[pri:0, instance:testngFiles.groups@62ee68d8]" name="test4" class="testngFiles.groups"/>
      </group> <!-- b -->
    </groups>
    <test name="smoke test cases" duration-ms="164" started-at="2017-05-27T06:28:25Z" finished-at="2017-05-27T06:28:25Z">
      <class name="testngFiles.groups">
        <test-method status="PASS" signature="test1()[pri:0, instance:testngFiles.groups@62ee68d8]" name="test1" duration-ms="2" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:testngFiles.groups@62ee68d8]" name="test2" duration-ms="2" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:testngFiles.groups@62ee68d8]" name="test3" duration-ms="3" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:testngFiles.groups@62ee68d8]" name="test4" duration-ms="2" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- testngFiles.groups -->
      <class name="testngFiles.Annotations">
        <test-method status="PASS" signature="openbrowser()[pri:0, instance:testngFiles.Annotations@396a51ab]" name="openbrowser" is-config="true" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="beforeTest" is-config="true" duration-ms="0" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="test1()[pri:0, instance:testngFiles.Annotations@396a51ab]" name="test1" duration-ms="5" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="close()[pri:0, instance:testngFiles.Annotations@396a51ab]" name="close" is-config="true" duration-ms="0" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="afterTest" is-config="true" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testngFiles.Annotations -->
      <class name="testngFiles.Dependency">
        <test-method status="PASS" signature="openbrowser()[pri:0, instance:testngFiles.Dependency@51081592]" name="openbrowser" duration-ms="4" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method status="PASS" signature="gotourl()[pri:0, instance:testngFiles.Dependency@51081592]" name="gotourl" duration-ms="2" started-at="2017-05-27T11:58:25Z" depends-on-methods="testngFiles.Dependency.openbrowser" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotourl -->
        <test-method status="PASS" signature="closebrowser()[pri:0, instance:testngFiles.Dependency@51081592]" name="closebrowser" duration-ms="2" started-at="2017-05-27T11:58:25Z" depends-on-methods="testngFiles.Dependency.gotourl" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- testngFiles.Dependency -->
      <class name="testngFiles.Priority">
        <test-method status="PASS" signature="One()[pri:0, instance:testngFiles.Priority@735b5592]" name="One" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- One -->
        <test-method status="PASS" signature="Two()[pri:1, instance:testngFiles.Priority@735b5592]" name="Two" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Two -->
        <test-method status="PASS" signature="Four()[pri:3, instance:testngFiles.Priority@735b5592]" name="Four" duration-ms="5" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Four -->
      </class> <!-- testngFiles.Priority -->
      <class name="testngFiles.Example">
        <test-method status="FAIL" signature="verifyHomePageTitle()[pri:0, instance:testngFiles.Example@9629756]" name="verifyHomePageTitle" duration-ms="71" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Program Files\Java\geckodriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Program Files\Java\geckodriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.firefox.GeckoDriverService.access$000(GeckoDriverService.java:37)
	at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:95)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.firefox.FirefoxDriver.createCommandExecutor(FirefoxDriver.java:277)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:247)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:242)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:238)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
	at testngFiles.Example.verifyHomePageTitle(Example.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomePageTitle -->
      </class> <!-- testngFiles.Example -->
      <class name="testngFiles.Sequencing">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="beforeSuite" is-config="true" duration-ms="9" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCase1()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="testCase1" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCase2()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="testCase2" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testngFiles.Sequencing@5034c75a]" name="afterSuite" is-config="true" duration-ms="0" started-at="2017-05-27T11:58:25Z" finished-at="2017-05-27T11:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testngFiles.Sequencing -->
    </test> <!-- smoke test cases -->
  </suite> <!-- automation test -->
</testng-results>
